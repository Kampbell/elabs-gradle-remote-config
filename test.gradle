

subprojects {

	task unitTest(type : Test) { exclude "**/**IT" }

	test {

		// exclude Selenium Tests
		useJUnit {
//			excludeCategories 'fr.echoes.labs.ksf.foundation.tests.SeleniumTests'
//			excludeCategories 'fr.echoes.labs.ksf.foundation.tests.SmokeTests'
		}

		if (project.hasProperty("logTest")) {
			// listen to events in the test execution lifecycle
			beforeTest { descriptor ->
				logger.lifecycle("Running test: " + descriptor)

			}
			// listen to standard out and standard error of the test JVM(s)
			onOutput { descriptor, event ->
				logger.lifecycle("Test: " + descriptor + " : " + event.message )
			}
			// show standard out and standard error of the test JVM(s) on the console
			testLogging.showStandardStreams = true

		}

		// set heap size for the test JVM(s)
		minHeapSize = testMinHeapSize
		maxHeapSize = testMaxHeapSize

		// set JVM arguments for the test JVM(s)
		// disabled for java 8+ and this option is disabled
		if(JavaVersion.current() < JavaVersion.VERSION_1_8){
			jvmArgs "-XX:MaxPermSize="+testMaxPermSize
		}
	}
    tasks.withType(Test) {
		ignoreFailures = project.hasProperty("ignoreTestFailures")
		if (project.hasProperty("logTest")) {
			testLogging {
				events "passed", "skipped", "failed"
			}
		}
	}
	configurations.all {
		resolutionStrategy {
			//force    'org.objenesis:objenesis:$TEST_OBJENESIS'
			force "junit:junit:${TEST_JUNIT}"
		}
	}
}

println "-- INFO : fail on tests = ${!test.ignoreFailures}"
