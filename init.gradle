

println ""
println "-----------------------------------------------------------------------------------"
println "-- $title Gradle Build Script"
println "-----------------------------------------------------------------------------------"

gradle.allprojects {
	if (project.hasProperty("myVersion")) {
		version = project.getProperty("myVersion");
	}
	if (version.startsWith("origin/")) {
		version = version.substring(7);
	}
	version = version.replace("/","_");
}

ext {
	
	currentDate = new Date()
	buildYear = currentDate.format('yyyy')
	buildDate = currentDate.format('yyyy-MM-dd')
	buildTime = currentDate.format('HH:mm:ss.SSSZ')
	
	documentationTitle = "$title Documentation"
	projectDescription = "$description"
	projectAuthor = "$author"
	docCopyright = "$title v$version &#8208; &copy; $buildYear $projectAuthor"
	docFooter = "$docCopyright &#8208; <a href=\"$website\">$website</a> &#8208; <a href=\"mailto:$contact\">$contact</a>"
	docsSrcDir = "src/main/doc"
	docsDir = file("$project.buildDir/docs")

	// use by the markdown converter script to store the HTML template
	htmlTemplateCacheDir = "$rootProject.rootDir/.htmlTemplateCache/"

}

println "-- "
println "-- Building version '$version'"
println "-- with " + GradleVersion.current().toString()
println "-- on Java Virtual Machine " + org.gradle.internal.jvm.Jvm.current()
println "--"
println "-- HINT : To print unit tests logs uses -PlogTest"
println "-- HINT : To compile outside Echoes/Lab building, use -Premote"
